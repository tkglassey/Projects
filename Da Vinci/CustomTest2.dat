@0001000
20210002 //     addi r[1], r[1], 0x2	                        0
00010020 //	add r0, r0, r1	(r0=2)				1
6c000000 //     push (push 2 onto stack)
74010002 //	multi r1, r0, 2	(r1 = 4)			2
2042000c //     addi r[2], r[2], 0xc
20c60005 //     addi r[6], r[6], 0x5
20e70003 //     addi r[7], r[7], 0x3
00462824 // 	and r5, r2, r6	(r5=4)				3
00C72025 //	or r4, r6, r7	(r4=7)				4
00C73027 //	nor r6, r7, r6	(r6=fffffff8)			5
2108000d //     addi r[8], r[8], 0xd (r8 = d)                   0
01080081 //     srl  r[8], r[8], 0x2 (r8 = 3)
3C000100 //     lui  r[0], 0x0001;
AC010000 //     sw   r[1], r[0], 0x0000;
8C030000 //	lw   r[3], r[0], 0x00000
70000000 //     pop	             (r0 = 2)
14230003 //	bne r[3](4), r[1](4), 0x1
3C090dab //     lui  r[9], 0x0dab; (NO SKIP)
304a0005 //	andi r[a], r[2], 0x5  (ra = 4)
14260001 //	bne r[6](5), r[1](4), 0x1
3C090bad //     lui  r[9], 0x0bad; (SKIP)
34eb0005 //	ori  r[b], r[7], 0x5  (r[b] = 7)
282c00ff //	slti r[c], r[1], 0xff (r[c]=1)
